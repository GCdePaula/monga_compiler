BUILDING FILE inputs/test1.in
; ModuleID = 'program'
source_filename = "program"

@0 = global [5 x i8] c"%ld\0A\00"
@1 = global [5 x i8] c"%lf\0A\00"
@2 = global i64 0
@3 = global i64 0
@4 = global double 0.000000e+00

declare i32 @printf(i8*, ...)

define i64 @foo() {
entry:
  ret i64 0
}

define i64 @main() {
entry:
  %0 = call i32 (i8*, ...) @printf([5 x i8]* @0, i64 11)
  %1 = call i32 (i8*, ...) @printf([5 x i8]* @1, double 1.150000e+01)
  store i64 42, i64* @2
  %2 = load i64, i64* @2
  store i64 %2, i64* @3
  store i64 23, i64* @2
  %3 = load i64, i64* @2
  %4 = call i32 (i8*, ...) @printf([5 x i8]* @0, i64 %3)
  %5 = load i64, i64* @3
  %6 = call i32 (i8*, ...) @printf([5 x i8]* @0, i64 %5)
  store double 1.500000e+00, double* @4
  %7 = load double, double* @4
  %8 = call i32 (i8*, ...) @printf([5 x i8]* @1, double %7)
  ret i64 0
}
11
11.500000
23
42
1.500000
