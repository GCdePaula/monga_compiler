FILE hello_test.monga LLVM CODE
; ModuleID = 'program'
source_filename = "program"

@0 = private unnamed_addr constant [14 x i8] c"Hello, World!\00", align 1
@1 = private unnamed_addr constant [6 x i8] c"\22%s\22\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%lf\0A\00", align 1
@4 = private unnamed_addr constant [10 x i8] c"Bool: %d\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @malloc(i64)

define i64 @main() {
entry:
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @0, i32 0, i32 0))
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i64 10)
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), double 1.050000e+01)
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @4, i32 0, i32 0), i1 true)
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @4, i32 0, i32 0), i1 false)
  ret i64 0
}

RETURN 0

OUTPUT
"Hello, World!"
10
10.500000
Bool: 1
Bool: 0
