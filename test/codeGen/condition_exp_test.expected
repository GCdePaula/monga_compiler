FILE condition_exp_test.monga LLVM CODE
; ModuleID = 'program'
source_filename = "program"

@0 = private unnamed_addr constant [8 x i8] c"Gt e Ge\00", align 1
@1 = private unnamed_addr constant [6 x i8] c"\22%s\22\0A\00", align 1
@2 = private unnamed_addr constant [10 x i8] c"Bool: %d\0A\00", align 1
@3 = private unnamed_addr constant [8 x i8] c"Lt e Le\00", align 1
@4 = private unnamed_addr constant [3 x i8] c"Eq\00", align 1
@5 = private unnamed_addr constant [3 x i8] c"Ne\00", align 1
@6 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@7 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@8 = private unnamed_addr constant [4 x i8] c"Not\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @malloc(i64)

define i64 @main() {
entry:
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i32 0, i32 0))
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @3, i32 0, i32 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i32 0, i32 0))
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i32 0, i32 0))
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @6, i32 0, i32 0))
  br i1 true, label %45, label %47

45:                                               ; preds = %entry
  br i1 true, label %46, label %47

46:                                               ; preds = %45
  br label %48

47:                                               ; preds = %45, %entry
  br label %48

48:                                               ; preds = %47, %46
  %49 = phi i1 [ true, %46 ], [ false, %47 ]
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %49)
  br i1 true, label %51, label %53

51:                                               ; preds = %48
  br i1 false, label %52, label %53

52:                                               ; preds = %51
  br label %54

53:                                               ; preds = %51, %48
  br label %54

54:                                               ; preds = %53, %52
  %55 = phi i1 [ true, %52 ], [ false, %53 ]
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %55)
  br i1 false, label %57, label %59

57:                                               ; preds = %54
  br i1 false, label %58, label %59

58:                                               ; preds = %57
  br label %60

59:                                               ; preds = %57, %54
  br label %60

60:                                               ; preds = %59, %58
  %61 = phi i1 [ true, %58 ], [ false, %59 ]
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %61)
  br i1 false, label %63, label %65

63:                                               ; preds = %60
  br i1 true, label %64, label %65

64:                                               ; preds = %63
  br label %66

65:                                               ; preds = %63, %60
  br label %66

66:                                               ; preds = %65, %64
  %67 = phi i1 [ true, %64 ], [ false, %65 ]
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %67)
  br i1 true, label %69, label %72

69:                                               ; preds = %66
  br i1 true, label %70, label %72

70:                                               ; preds = %69
  br i1 false, label %71, label %72

71:                                               ; preds = %70
  br label %73

72:                                               ; preds = %70, %69, %66
  br label %73

73:                                               ; preds = %72, %71
  %74 = phi i1 [ true, %71 ], [ false, %72 ]
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %74)
  br i1 true, label %76, label %79

76:                                               ; preds = %73
  br i1 false, label %77, label %79

77:                                               ; preds = %76
  br i1 true, label %78, label %79

78:                                               ; preds = %77
  br label %80

79:                                               ; preds = %77, %76, %73
  br label %80

80:                                               ; preds = %79, %78
  %81 = phi i1 [ true, %78 ], [ false, %79 ]
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %81)
  br i1 false, label %83, label %86

83:                                               ; preds = %80
  br i1 true, label %84, label %86

84:                                               ; preds = %83
  br i1 true, label %85, label %86

85:                                               ; preds = %84
  br label %87

86:                                               ; preds = %84, %83, %80
  br label %87

87:                                               ; preds = %86, %85
  %88 = phi i1 [ true, %85 ], [ false, %86 ]
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %88)
  br i1 true, label %90, label %93

90:                                               ; preds = %87
  br i1 true, label %91, label %93

91:                                               ; preds = %90
  br i1 true, label %92, label %93

92:                                               ; preds = %91
  br label %94

93:                                               ; preds = %91, %90, %87
  br label %94

94:                                               ; preds = %93, %92
  %95 = phi i1 [ true, %92 ], [ false, %93 ]
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %95)
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i32 0, i32 0))
  br i1 true, label %99, label %98

98:                                               ; preds = %94
  br i1 true, label %99, label %100

99:                                               ; preds = %98, %94
  br label %101

100:                                              ; preds = %98
  br label %101

101:                                              ; preds = %100, %99
  %102 = phi i1 [ true, %99 ], [ false, %100 ]
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %102)
  br i1 true, label %105, label %104

104:                                              ; preds = %101
  br i1 false, label %105, label %106

105:                                              ; preds = %104, %101
  br label %107

106:                                              ; preds = %104
  br label %107

107:                                              ; preds = %106, %105
  %108 = phi i1 [ true, %105 ], [ false, %106 ]
  %109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %108)
  br i1 false, label %111, label %110

110:                                              ; preds = %107
  br i1 false, label %111, label %112

111:                                              ; preds = %110, %107
  br label %113

112:                                              ; preds = %110
  br label %113

113:                                              ; preds = %112, %111
  %114 = phi i1 [ true, %111 ], [ false, %112 ]
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %114)
  br i1 false, label %117, label %116

116:                                              ; preds = %113
  br i1 true, label %117, label %118

117:                                              ; preds = %116, %113
  br label %119

118:                                              ; preds = %116
  br label %119

119:                                              ; preds = %118, %117
  %120 = phi i1 [ true, %117 ], [ false, %118 ]
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %120)
  br i1 false, label %124, label %123

122:                                              ; preds = %123
  br i1 true, label %124, label %125

123:                                              ; preds = %119
  br i1 false, label %124, label %122

124:                                              ; preds = %122, %123, %119
  br label %126

125:                                              ; preds = %122
  br label %126

126:                                              ; preds = %125, %124
  %127 = phi i1 [ true, %124 ], [ false, %125 ]
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %127)
  br i1 false, label %131, label %130

129:                                              ; preds = %130
  br i1 false, label %131, label %132

130:                                              ; preds = %126
  br i1 true, label %131, label %129

131:                                              ; preds = %129, %130, %126
  br label %133

132:                                              ; preds = %129
  br label %133

133:                                              ; preds = %132, %131
  %134 = phi i1 [ true, %131 ], [ false, %132 ]
  %135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %134)
  br i1 true, label %138, label %137

136:                                              ; preds = %137
  br i1 false, label %138, label %139

137:                                              ; preds = %133
  br i1 false, label %138, label %136

138:                                              ; preds = %136, %137, %133
  br label %140

139:                                              ; preds = %136
  br label %140

140:                                              ; preds = %139, %138
  %141 = phi i1 [ true, %138 ], [ false, %139 ]
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %141)
  br i1 false, label %145, label %144

143:                                              ; preds = %144
  br i1 false, label %145, label %146

144:                                              ; preds = %140
  br i1 false, label %145, label %143

145:                                              ; preds = %143, %144, %140
  br label %147

146:                                              ; preds = %143
  br label %147

147:                                              ; preds = %146, %145
  %148 = phi i1 [ true, %145 ], [ false, %146 ]
  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 %148)
  %150 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @8, i32 0, i32 0))
  %151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 false)
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i1 true)
  ret i64 0
}

RETURN 0

OUTPUT
"Gt e Ge"
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
"Lt e Le"
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
"Eq"
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
"Ne"
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
Bool: 1
Bool: 0
"And"
Bool: 1
Bool: 0
Bool: 0
Bool: 0
Bool: 0
Bool: 0
Bool: 0
Bool: 1
"Or"
Bool: 1
Bool: 1
Bool: 0
Bool: 1
Bool: 1
Bool: 1
Bool: 1
Bool: 0
"Not"
Bool: 0
Bool: 1
